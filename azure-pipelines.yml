trigger:
  branches:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string

parameters:
- name: initSteps
  type: stepList
  default:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - bash: npm install -g yarn
      displayName: "Install Yarn"

    - bash: yarn
      displayName: "Install npm dependencies"

    - script: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
      displayName: 'Install Python dependencies'

    - script: |
        which python > python.txt
        set /p PYTHON=<python.txt
        ln -s %PYTHON% %PYTHON%$(python.version)
        python --version
        which python$(python.version)
      displayName: "Which python"

    - bash: env
      displayName: "List all environment variables"

- name: initDockerSteps
  type: stepList
  default:
    - task: DockerInstaller@0
      displayName: Docker Installer
      inputs:
        dockerVersion: 19.03.8
        releaseType: stable

- name: initDockerStepsMac
  type: stepList
  default:
    - script: |
        ci/install_docker_desktop_mac.sh
        ci/start_docker_desktop_mac.sh
      displayName: 'Setup Docker Desktop Mac'

- name: initS3proxySteps
  type: stepList
  default:
    - bash: |
        nohup ci/s3_local.sh -d
        sleep 5
      displayName: "Start up local S3 server"

    - script: curl http://127.0.0.1:9000/
      displayName: 'Test local S3 server'

- name: initS3proxyStepsMac
  type: stepList
  default:
    - script: |
        docker pull andrewgaul/s3proxy
        sudo docker run --detach -p 9000:80 --env S3PROXY_AUTHORIZATION=none andrewgaul/s3proxy
        sleep 15
      displayName: 'Start s3proxy in a docker'

    - script: curl http://127.0.0.1:9000/
      displayName: 'Test local S3 server'

- name: initSmbOsWindows
  type: stepList
  default:
    - task: PowerShell@2
      inputs:
        targetType: 'filePath'
        filePath: 'ci/start_smb_os_windows.ps1'
        errorActionPreference: 'stop'
        failOnStderr: True
      displayName: 'Expose share on os builtin samba server'

- name: testSteps
  type: stepList
  default:
    - script: make lintpy
      displayName: 'Lint Python'

    - script: make lintjs
      displayName: 'Lint JS'

    - script: make testpy
      displayName: 'Test Python'

    - script: make testjs
      displayName: 'Test JS'

- name: publishSteps
  type: stepList
  default:
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: 'python_junit.xml'
        testRunTitle: 'Publish test results for Python $(python.version) $(manylinux_flag)'

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/*coverage.xml'

jobs:
- job: 'Linux'
  pool:
    vmImage: 'ubuntu-latest'

  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    - ${{ parameters.initDockerSteps }}
    - ${{ parameters.initS3proxySteps }}
    - ${{ parameters.initSteps }}
    - ${{ parameters.testSteps }}
    - ${{ parameters.publishSteps }}

- job: 'Mac'
  pool:
    vmImage: 'macos-10.14'

  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    - ${{ parameters.initDockerStepsMac }}
    - ${{ parameters.initS3proxyStepsMac }}
    - ${{ parameters.initSteps }}
    - ${{ parameters.testSteps }}
    - ${{ parameters.publishSteps }}

- job: 'Windows'
  pool:
    vmImage: 'windows-2019'

  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    - ${{ parameters.initSmbOsWindows }}
    - ${{ parameters.initS3proxySteps }}
    - ${{ parameters.initSteps }}
    - ${{ parameters.testSteps }}
    - ${{ parameters.publishSteps }}
